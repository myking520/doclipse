<?xml version="1.0" encoding="UTF-8"?>
<doclipse>
<tag target="class" name="@castor.class" doc="Defines the class and its attributes. For full coverage of the mapping options, please refer to the Castor mapping documentation.">
<attribute name="table" required="true" doc="The name of the table in the database that the class is mapped to."/>
<attribute name="id" required="true" doc="The fields that form the class's primary key."/>
<attribute name="access" required="true" allowed="read-only,shared,exclusive,db-locked" doc="Define the access to the class."/>
<attribute name="depends" doc="The name of the class this class depends on."/>
<attribute name="extends" doc="Should be used only if this class extends another class for which mapping information is provided. It should not be used if the extended class is not used in the mapping file."/>
<attribute name="key-generator" doc="The key-generator strategy to be used by Castor."/>
<attribute name="auto-complete" doc="If true, the class will be introspected to determine its field and the fields specified in the mapping file will be used to override the field found during the introspection. "/>
<attribute name="ns-uri" doc="The namespace URI to be used for the class. "/>
<attribute name="ns-prefix" doc="The namespace prefix to be used for the class."/>
</tag>
<tag target="method" name="@castor.field" doc="">
<attribute name="type" doc="The Java type of the field. It is used to access the field. Castor will use this information to cast the XML information (like string into integer). It is also used to define the signature of the accessors method. If a collection is specified, this is used to specify the type of the object inside the collection. If type is not specified it defaults to the return type of the method."/>
<attribute name="required" doc="Flag to indicate if the field is compulsory."/>
<attribute name="direct" doc="Flag to indicate if the field should be accessed directly rather than using getter / setter methods."/>
<attribute name="lazy" doc="Flag to indicate if the field loaded lazily."/>
<attribute name="transient" doc="Flag to indicate if the field should be ignored during marshalling - useful when used with the auto-complete option of @castor.class."/>
<attribute name="set-method" doc="The method used to set the property value."/>
<attribute name="create-method" doc="The factory method for instantiation of FieldHandler."/>
<attribute name="collection" allowed="array,arraylist,vector,hashtable,collection,set,map" doc=""/>
</tag>
<tag target="method" name="@castor.field-sql" doc="">
<attribute name="name" required="true" doc="The column name the field is mapped to."/>
<attribute name="type" required="true" doc="The SQL type of the field."/>
<attribute name="many-key" required="true" doc="The many key of the field."/>
<attribute name="many-table" required="true" doc="The many table of the field."/>
<attribute name="dirty" doc="Flag to indicate if the field is checked for dirty status or not."/>
</tag>
<tag target="method" name="@castor.field-xml" doc="">
<attribute name="name" required="true" doc="The name of the element or attribute."/>
<attribute name="type" doc="XML Schema type (of the value of this field) that requires specific handling in the Castor Marshalling Framework (such as 'QName' for instance)."/>
<attribute name="matches" doc="Allows overriding the matches rules for the name of the element. It is a standard regular expression and will be used instead of the 'name' field."/>
<attribute name="QName-prefix" doc="When using a QName value, you can provide a default prefix that is used when marshalling value of type QName."/>
<attribute name="reference" doc="Indicates if this field has to be treated as a reference by the unmarshaller. In order to work properly, you must specify the node type to 'attribute' for both the 'id' and the 'reference' fields."/>
<attribute name="node" allowed="element,attribute,text" doc="Indicates if the name corresponds to an attribute, an element, or text content. By default, primitive types are assumed to be an attribute otherwise the node is assumed to be an element."/>
<attribute name="dirty" doc="Flag to indicate if the field is checked for dirty status or not."/>
</tag>
</doclipse>
